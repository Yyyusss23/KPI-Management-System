<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Assigned KPIs</title>
    <link rel="icon" href="/logo.png" />

    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />

    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css"
      rel="stylesheet"
    />

    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600;700&display=swap"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap"
      rel="stylesheet"
    />

    <link rel="stylesheet" href="/style.css" />
  </head>

  <body>
    <button class="menu-toggle-btn d-md-none" type="button" id="sidebarToggle">
      â˜°
    </button>

    <div class="container-fluid">
      <div class="row">
        <nav class="d-md-block sidebar" id="sidebarMenu">
          <div class="sidebar-sticky p-3">
            <img
              src="/logo.png"
              alt="KPI System Logo"
              class="img-fluid mb-4"
              style="max-width: 120px"
            />
            <ul class="nav flex-column" id="sidebarLinks">
              <li class="nav-item">
                <a class="nav-link" href="/manager/dashboard">
                  <i class="fas fa-chart-line"></i> <span class="menu-text">Dashboard</span>
                </a>
              </li>
              <li class="nav-item">
                <a class="nav-link active" href="/manager/kpi/view">
                  <i class="fas fa-tasks"></i> <span class="menu-text">Manage KPIs</span>
                </a>
              </li>
              <li class="nav-item">
                <a class="nav-link" href="/manager/users">
                  <i class="fas fa-users"></i> <span class="menu-text">Manage Users</span>
                </a>
              </li>
              <li class="nav-item">
                <a class="nav-link" href="/manager/notifications">
                  <i class="fas fa-bell"></i> <span class="menu-text">Notifications</span>
                </a>
              </li>
              <li class="nav-item">
                <a class="nav-link" href="/manager/profile">
                  <i class="fas fa-user"></i> <span class="menu-text">Profile</span>
                </a>
              </li>
              <li class="nav-item">
                <a class="nav-link" href="/logout">
                  <i class="fas fa-sign-out-alt"></i> <span class="menu-text">Logout</span>
                </a>
              </li>
            </ul>
          </div>
        </nav>

        <main class="col-12 col-md-10 px-4" id="main-content">
          <div class="mt-4">
            <h1 class="mb-3">View Assigned KPIs</h1>
            <a
              href="/manager/kpi/assign"
              class="btn btn-teal btn-lg mb-4"
              title="Assign New KPI"
            >
              Assign New KPI
            </a>
            </div>

          <div class="row g-3 mb-4 filter-boxes">
            <div class="col-md-4">
              <select id="filterStaff" class="form-select fs-5">
                <option value="">Filter by Staff</option>
                <% uniqueStaffNames.forEach(staffName => { %>
                  <option value="<%= staffName %>"><%= staffName %></option>
                <% }); %>
              </select>
            </div>

            <div class="col-md-4">
              <select id="filterDepartment" class="form-select fs-5">
                <option value="">Filter by Department</option>
                <% uniqueDepartments.forEach(department => { %>
                  <option value="<%= department %>"><%= department %></option>
                <% }); %>
              </select>
            </div>

            <div class="col-md-4">
              <select id="filterStatus" class="form-select fs-5">
                <option value="">Filter by Status</option>
                <option value="Pending">Pending</option>
                <option value="Approved">Approved</option>
                <option value="Rejected">Rejected</option>
              </select>
            </div>
          </div>

          <div class="row" id="kpiCardsContainer">
            </div>
        </main>
      </div>
    </div>

    <div id="sidebarOverlay" class="sidebar-overlay"></div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/js/bootstrap.bundle.min.js"></script>

    <script>
      // The KPIs data is passed from the server
      const allKpis = <%- JSON.stringify(kpis) %>; 
      
      // DOM elements
      const kpiCardsContainer = document.getElementById("kpiCardsContainer");
      const filterStaff = document.getElementById("filterStaff");
      const filterDepartment = document.getElementById("filterDepartment");
      const filterStatus = document.getElementById("filterStatus");

      // Helper function to get status color
      function getStatusColor(status) {
        switch (status?.toLowerCase()) {
          case "approved":
            return "success";
          case "rejected":
            return "danger";
          case "pending":
            return "warning text-dark";
          default:
            return "secondary";
        }
      }

      // Render KPI cards
      function renderCards(kpisToRender) {
        kpiCardsContainer.innerHTML = "";

        if (kpisToRender.length === 0) {
          kpiCardsContainer.innerHTML = `
            <div class="col-12 text-center mt-4">
              <p class="text-muted">No KPIs match the selected filters.</p>
            </div>
          `;
          return;
        }

        kpisToRender.forEach((kpi) => {
          const card = document.createElement("div");
          card.className = "col-md-6 col-lg-4 mb-4";

          // Determine the progress percentage based on the progressStatus
          let progressPercentage = 0;
          let progressText = "";
          // Assuming `kpi.progressStatus` from DB matches the client-side logic
          switch (kpi.progressStatus?.toLowerCase()) {
            case "completed":
              progressPercentage = 100;
              progressText = "Completed";
              break;
            case "in progress":
              progressPercentage = 50; // You might want more granular progress
              progressText = "In Progress";
              break;
            case "not started":
              progressPercentage = 0;
              progressText = "Not Started";
              break;
            default:
              progressPercentage = 0;
              progressText = "Not Started";
              break;
          }
          
          // Format dueDate if it's a Date object from Mongoose
          const formattedDueDate = kpi.dueDate ? new Date(kpi.dueDate).toLocaleDateString('en-GB', { day: 'numeric', month: 'long', year: 'numeric' }) : 'N/A';

          card.innerHTML = `
            <div class="card h-100 shadow-sm">
              <div class="card-body d-flex flex-column justify-content-between">
                <div>
                  <h5 class="card-title">
                    <a href="/manager/kpi-detail/${kpi._id}" class="text-decoration-none text-primary">
                      ${kpi.title}
                    </a>
                  </h5>
                  <p class="card-text"><strong>Description:</strong> ${kpi.description || 'N/A'}</p>
                  <p class="card-text"><strong>Staff:</strong> ${kpi.staffName || 'N/A'}</p>
                  <p class="card-text"><strong>Department:</strong> ${kpi.department || 'N/A'}</p>
                  <p class="card-text"><strong>Target:</strong> ${kpi.targetValue || 'N/A'}</p>
                  <p class="card-text"><strong>Current:</strong> ${kpi.currentValue || '0'}</p>
                  <p class="card-text"><strong>Due Date:</strong> ${formattedDueDate}</p>
                  <p class="card-text"><strong>Indicators:</strong> ${kpi.performanceIndicator || 'N/A'}</p>
                  <p class="card-text"><strong>Progress:</strong> ${progressText}</p>
                  <div class="progress" style="height: 20px;">
                    <div class="progress-bar" role="progressbar" aria-valuenow="${progressPercentage}" aria-valuemin="0" aria-valuemax="100" style="width: ${progressPercentage}%;"></div>
                  </div>
                </div>
                <div class="mt-3 d-flex justify-content-between align-items-center">
                  ${kpi.status?.toLowerCase() === "pending"
                    ? `<a href="/manager/kpi/review/${kpi._id}" class="btn btn-sm btn-outline-primary">Review</a>`
                    : `<span></span>`
                  }
                  <span class="badge bg-${getStatusColor(kpi.status)}">${kpi.status || 'N/A'}</span>
                </div>
              </div>
            </div>
          `;

          kpiCardsContainer.appendChild(card);
        });
      }

      // Filter logic
      function applyFilters() {
        const staff = filterStaff.value.toLowerCase();
        const department = filterDepartment.value.toLowerCase();
        const status = filterStatus.value.toLowerCase();

        // Filter the `allKpis` array that came from the server
        const filtered = allKpis.filter((kpi) =>
          (staff === "" || kpi.staffName.toLowerCase().includes(staff)) &&
          (department === "" || kpi.department.toLowerCase().includes(department)) &&
          (status === "" || kpi.status.toLowerCase().includes(status))
        );

        renderCards(filtered);
      }

      // Add event listeners
      [filterStaff, filterDepartment, filterStatus].forEach((input) => {
        input.addEventListener("change", applyFilters); // Use 'change' for select elements
      });

      // Initial render with all KPIs when the page loads
      document.addEventListener("DOMContentLoaded", () => {
        renderCards(allKpis);
      });

    </script>
  </body>
</html>